{
	"id": "c439a6ea-f5b5-1fb1-560b-cf762c64ecd9",
	"name": "API Management Policies Application",
	"description": "Apply policies to Task APIs",
	"order": [
		"243303ce-0947-8ac5-8133-9c179f6d99c7",
		"f9105136-7c1d-64d2-a92f-df2191825da3",
		"02e35bd5-8923-bb84-4adb-d14c740e96c6",
		"8d446dc8-cb9b-6b32-a1e4-4575946b4cb1"
	],
	"folders": [],
	"timestamp": 1454342293109,
	"owner": 0,
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "02e35bd5-8923-bb84-4adb-d14c740e96c6",
			"headers": "Authorization: {{authorization-token}}\nContent-Type: application/vnd.ms-azure-apim.policy+xml\nIf-Match: *\n",
			"url": "{{management-api-url}}//apis/{{api-id}}/operations/get-user/policy?api-version={{version}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454349782676,
			"name": "Create Policy (Transformation) ",
			"description": "Creates a policy that applies transformation on response",
			"collectionId": "c439a6ea-f5b5-1fb1-560b-cf762c64ecd9",
			"rawModeData": "<policies>\r\n    <inbound>\r\n        <base />\r\n    </inbound>\r\n    <outbound>\r\n        <base />\r\n        <json-to-xml apply=\"always\" consider-accept-header=\"false\" />\r\n    </outbound>\r\n</policies>"
		},
		{
			"id": "243303ce-0947-8ac5-8133-9c179f6d99c7",
			"headers": "Authorization: {{authorization-token}}\nContent-Type: application/vnd.ms-azure-apim.policy+xml\nIf-Match: *\n",
			"url": "{{management-api-url}}/products/custom/policy?api-version={{version}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454426394639,
			"name": "Create Policy (Quota_On_Product)",
			"description": "Creates a policy that applies Quota on number of REST calls",
			"collectionId": "c439a6ea-f5b5-1fb1-560b-cf762c64ecd9",
			"rawModeData": "<policies>\r\n    <inbound>\r\n        <!-- Change the quota to immediately see the effect-->\r\n        <rate-limit calls=\"5\" renewal-period=\"60\">\r\n        </rate-limit>\r\n        <quota calls=\"200\" renewal-period=\"604800\">\r\n        </quota>\r\n        <base />\r\n  </inbound>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>"
		},
		{
			"id": "8d446dc8-cb9b-6b32-a1e4-4575946b4cb1",
			"headers": "Authorization: {{authorization-token}}\nContent-Type: application/vnd.ms-azure-apim.policy+xml\nIf-Match: *\n",
			"url": "{{management-api-url}}//apis/{{api-id}}/operations/create-task/policy?api-version={{version}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454998558731,
			"name": "Create Policy (Custom)",
			"description": "Creates a custom policy",
			"collectionId": "c439a6ea-f5b5-1fb1-560b-cf762c64ecd9",
			"rawModeData": "<policies>\r\n  <inbound>\r\n\r\n    <base />\r\n  </inbound>\r\n  <outbound>\r\n    <base />\r\n    <choose>\r\n      <when condition='@((int)context.Response.StatusCode &lt; 300)'>\r\n        <set-variable name=\"userEmailAddress\" value='@((string)(context.Response.Body.As&lt;JObject&gt;(preserveContent: true)[\"User\"]))' />\r\n        <set-variable name=\"taskLength\" value='@{\r\n            var taskObj = (JObject)context.Response.Body.As&lt;JObject&gt;(preserveContent: true)[\"Tasks\"];\r\n\t\t        var taskArray = (JArray)taskObj[\"$values\"];\r\n\t\t        return taskArray.Count;\r\n             }' />\r\n      </when>\r\n    </choose>\r\n    <choose>\r\n      <!-- Check task length in response -->\r\n      <when condition='@(((int)context.Response.StatusCode &lt; 300) &amp;&amp; ((int)context.Variables[\"taskLength\"] > 4))'>\r\n        <send-request mode=\"new\" response-variable-name=\"webhookResponse\" timeout=\"20\" ignore-error=\"true\">\r\n          <set-url>http://events.pagerduty.com/generic/2010-04-15/create_event.json</set-url>\r\n          <set-method>POST</set-method>\r\n          <set-header name=\"Content-Type\" exists-action=\"override\">\r\n            <value>application/json</value>\r\n          </set-header>\r\n          <set-header name=\"Authorization\" exists-action=\"override\">\r\n            <value>{{pager-duty-token}}</value>\r\n          </set-header>\r\n          <set-body>\r\n            {\"service_key\":\"{{pager-duty-incident-service-id}}\"\r\n            ,\"event_type\":\"trigger\",\r\n            \"description\":\"Tasks assigned: 5 or more\",\r\n            \"details\":[]\r\n            }\r\n          </set-body>\r\n        </send-request>\r\n        <choose>\r\n          <!-- Check active property in response -->\r\n          <when condition='@((bool)true)'>\r\n            <!-- Parse the response from WebHook-->\r\n            <set-variable name=\"webHookStatus\" value='@{\r\n                          var response = ((IResponse)context.Variables[\"webhookResponse\"]).Body.As&lt;JObject&gt;();\r\n                          return (string) response[\"status\"];\r\n                          }' />\r\n            <return-response>\r\n              <set-status code='@{return (int)context.Response.StatusCode;}' reason='@{return (string)context.Response.StatusReason;}' />\r\n              <set-header name=\"Content-Type\" exists-action=\"override\">\r\n                <value>application/json</value>\r\n              </set-header>\r\n              <set-body>\r\n                @{\r\n                var response = context.Response.Body.As&lt;JObject&gt;();\r\n                response.Add(\"WebHook-triggered\",(string)context.Variables[\"webHookStatus\"]);\r\n                return response.ToString();\r\n                }\r\n              </set-body>\r\n            </return-response>\r\n          </when>\r\n        </choose>\r\n      </when>\r\n\r\n    </choose>\r\n  </outbound>\r\n</policies>"
		},
		{
			"id": "f9105136-7c1d-64d2-a92f-df2191825da3",
			"headers": "Authorization: {{authorization-token}}\nContent-Type: application/vnd.ms-azure-apim.policy+xml\nIf-Match: *\n",
			"url": "{{management-api-url}}/products/custom/policy?api-version={{version}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454353923350,
			"name": "Create Policy (JWT Security)",
			"description": "Creates a policy that requires JWT token in requests",
			"collectionId": "c439a6ea-f5b5-1fb1-560b-cf762c64ecd9",
			"rawModeData": "<policies>\n    <inbound>\n            <validate-jwt  require-expiration-time=\"false\" header-name=\"Authorization\" >\n                 <issuer-signing-keys>\n                    <key>VGhpcyBpcyB2ZXJ5IGhhcmQgdG8gY3JhY2sgc2VjcmV0IGtleQ==</key>\n                </issuer-signing-keys>\n                <required-claims>\n                    <claim name=\"aud\" match=\"any\">\n                        <value>www.sample-task-api.com</value>\n                    </claim>\n                </required-claims>\n           </validate-jwt>\n        <base />\n    </inbound>\n    <outbound>\n        <base />\n    </outbound>\n</policies>"
		}
	]
}